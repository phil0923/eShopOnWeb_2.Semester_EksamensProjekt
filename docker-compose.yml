

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "@someThingComplicated1234"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "grep -q 'SQL Server is now ready for client connections' /var/opt/mssql/log/errorlog"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - backend

  identity:
    build:
      context: ./src/IdentityService
      dockerfile: Dockerfile
    container_name: identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__IdentityConnection=Server=sqlserver,1433;Database=IdentityDb;User Id=sa;Password=@someThingComplicated1234;TrustServerCertificate=True;
    depends_on:
      sqlserver:
        condition: service_healthy
    ports:
      - "5200:80"
    networks:
      - backend

  apigateway:
    build: ./src/ApiGateway
    container_name: apigateway
    ports:
      - "5050:8080"
    depends_on:
      - identity
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  sql_data: